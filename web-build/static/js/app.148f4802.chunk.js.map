{"version":3,"sources":["assets/imgur_logo_trans.png","src/app/components/styles/Styles.js","src/app/components/screens/ConnectScreen.js","src/app/components/screens/WebAuthScreen.js","src/app/components/views/ImageCircleView.js","src/app/components/views/ImageView.js","src/app/components/services/ImgurApi.js","src/app/components/screens/HomeScreen.js","src/app/components/screens/SearchScreen.js","src/app/App.js","index.js"],"names":["module","exports","StyleSheet","create","imageCircleContainer","aspectRatio","borderRadius","width","height","container","flex","margin","backgroundColor","color","paddingTop","Platform","OS","StatusBar","currentHeight","containerUploader","justifyContent","containerConnect","alignItems","tinyLogo","resizeMode","appButtonContainer","elevation","paddingVertical","paddingHorizontal","appButtonText","fontSize","fontWeight","alignSelf","textTransform","paddingBottom","containerHeader","containerBottomImage","ConnectScreen","props","navigate","this","navigation","SafeAreaView","style","Styles","View","Image","source","require","Pressable","onPress","onSubmitCredentials","Text","Component","WebAuthScreen","state","modalVisible","authentificated","setState","webViewState","a","async","hide","undefined","url","console","log","replace","params","regex","m","exec","decodeURIComponent","access_token","account_username","SecureStore","Modal","animationType","visible","onRequestClose","bind","transparent","ref","uri","onNavigationStateChange","javaScriptEnabled","domStorageEnabled","startInLoadingState","ImageCircleView","TouchableOpacity","ImageView","image","padding","containerImageBottom","flexDirection","marginBottom","size","numberOfLines","username","description","getGallerySearchResult","sort","window","page","str","fetch","method","headers","Authorization","mode","response","json","error","HomeScreen","getGalleryItems","section","showViral","showMature","albumPreview","_header","Headers","append","getGallery","then","arrayFiltered","data","map","elem","images","type","id","link","favorite","ups","downs","title","vote","account_url","filter","isUndef","gallery","catch","debug","search","name","FlatList","keyExtractor","item","toString","renderItem","SearchScreen","useState","input","setInput","setGallery","time","searchGallery","placeholder","value","onChangeText","onSubmitEditing","autoCorrect","maxToRenderPerBatch","Stack","createBottomTabNavigator","App","NavigationContainer","Navigator","screenOptions","route","tabBarIcon","iconName","focused","Ionicons","tabBarOptions","activeTintColor","inactiveTintColor","Screen","component","options","optionts","listeners","tabPress","e","preventDefault","registerRootComponent"],"mappings":"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","file":"static/js/app.148f4802.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgur_logo_trans.2f7790ea.png\";","import { StyleSheet, Platform } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\n\nexport default StyleSheet.create({\n\timageCircleContainer: {\n\t\taspectRatio: 1,\n\t\tborderRadius: 50,\n\t\twidth: 50,\n\t\theight: 50,\n\t},\n\tcontainer: {\n\t\tflex: 1,\n\t\tmargin: 5,\n\t\tbackgroundColor: \"seagreen\",\n\t\tcolor: \"dodgerblue\",\n\t\tpaddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n\t},\n\tcontainerUploader: {\n\t\tflex: 1,\n\t\tmargin: 5,\n\t\tbackgroundColor: \"seagreen\",\n\t\tcolor: \"dodgerblue\",\n\t\tpaddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n\t\tjustifyContent: 'center',\n\t},\n\tcontainerConnect: {\n\t\talignItems: \"center\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tpaddingTop: 50,\n\t\tbackgroundColor: \"seagreen\",\n\t},\n\ttinyLogo: {\n\t\twidth: 300,\n\t\theight: 70,\n\t\tresizeMode: \"stretch\",\n\t},\n\tappButtonContainer: {\n\t\televation: 8,\n\t\tborderRadius: 10,\n\t\tpaddingVertical: 10,\n\t\tpaddingHorizontal: 12,\n\t},\n\tappButtonText: {\n\t\tfontSize: 18,\n\t\tcolor: \"#fff\",\n\t\tfontWeight: \"bold\",\n\t\talignSelf: \"center\",\n\t\ttextTransform: \"uppercase\",\n\t\tpaddingTop: 20,\n\t\tpaddingBottom: 20,\n\t},\n\tcontainerHeader: {\n\t\tpaddingTop: 20,\n\t\tbackgroundColor: \"orange\",\n\t},\n\tcontainerBottomImage: {\n\t\tflex: 1,\n\t\tmargin: 10,\n\t},\n});\n","import React, { Component } from \"react\";\nimport { Text, View, SafeAreaView, Image, Pressable } from \"react-native\";\nimport Styles from \"../styles/Styles\";\n\nexport default class ConnectScreen extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tonSubmitCredentials(navigate) {\n\t\tnavigate(\"WebAuth\");\n\t}\n\n\trender() {\n\t\tconst { navigate } = this.props.navigation;\n\t\treturn (\n\t\t\t<SafeAreaView style={Styles.container}>\n\t\t\t\t<View style={Styles.containerConnect}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsource={require(\"../../../../assets/imgur_logo_trans.png\")}\n\t\t\t\t\t\tstyle={Styles.tinyLogo} />\n\t\t\t\t\t<Pressable onPress={() => this.onSubmitCredentials(navigate)}>\n\t\t\t\t\t\t<Text style={Styles.appButtonText}>Connect</Text>\n\t\t\t\t\t</Pressable>\n\t\t\t\t</View>\n\t\t\t</SafeAreaView>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { WebView } from \"react-native-webview\";\nimport { Modal } from \"react-native\";\nimport { API_URL, API_CLIENT_ID } from \"@env\";\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default class WebAuthScreen extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tstate = {\n\t\tmodalVisible: true,\n\t\tauthentificated: false\n\t};\n\n\thide() {\n\t\tthis.setState({ modalVisible: false });\n\t}\n\n\tasync onNavigationStateChange(webViewState) {\n\t\tif (this.state.authentificated === true) {\n\t\t\tthis.hide();\n\t\t\tnavigate(\"Home\");\n\t\t\treturn;\n\t\t}\n\t\tconst { navigate } = this.props.navigation;\n\t\tif (webViewState.url !== undefined) {\n\t\t\tconsole.log(webViewState.url)\n\t\t\turl = webViewState.url.replace(\"#\", \"&\");\n\t\t\tlet params = {};\n\t\t\tconst regex = /([^&=]+)=([^&]*)/g;\n\t\t\tlet m;\n\n\t\t\twhile ((m = regex.exec(url))) {\n\t\t\t\tparams[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tparams.access_token !== undefined &&\n\t\t\t\tparams.account_username !== undefined\n\t\t\t) {\n\t\t\t\tconsole.log(params.account_username);\n\t\t\t\tthis.setState({ authentificated: true });\n\t\t\t\tawait SecureStore.setItemAsync(\"bearer_token\", params.access_token);\n\t\t\t\tawait SecureStore.setItemAsync(\"user_name\", params.account_username);\n\t\t\t\tthis.hide();\n\t\t\t\tnavigate(\"Home\");\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tanimationType={\"slide\"}\n\t\t\t\tvisible={this.state.modalVisible}\n\t\t\t\tonRequestClose={this.hide.bind(this)}\n\t\t\t\ttransparent\n\t\t\t>\n\t\t\t\t<WebView\n\t\t\t\t\tref=\"webview\"\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi:\n\t\t\t\t\t\t\tAPI_URL +\n\t\t\t\t\t\t\t\"oauth2/authorize?client_id=\" +\n\t\t\t\t\t\t\tAPI_CLIENT_ID +\n\t\t\t\t\t\t\t\"&response_type=token\",\n\t\t\t\t\t}}\n\t\t\t\t\tonNavigationStateChange={this.onNavigationStateChange.bind(this)}\n\t\t\t\t\tjavaScriptEnabled={true}\n\t\t\t\t\tdomStorageEnabled={true}\n\t\t\t\t\tstartInLoadingState={false}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport {TouchableOpacity, Image} from 'react-native';\nimport Styles from \"../styles/Styles\";\n\nexport default class ImageCircleView extends Component {\n    constructor(props) {\n        super(props);\n\n      }\n    render() {\n        return (\n            <TouchableOpacity style={Styles.imageCircleContainer}>\n                <Image\n                    source={{uri: this.props.url}}\n                    style={[Styles.imageCircleContainer, {width: this.props.width, height: this.props.height}]}\n                    resizeMode=\"cover\"\n                />\n            </TouchableOpacity>\n        )\n    }\n\n}","import React, { Component } from \"react\";\nimport { View, Image, Text } from 'react-native';\nimport ImageCircleView from \"../views/ImageCircleView\";\nimport Styles from \"../styles/Styles\";\n\n\nconst ImageView = (props) => {\n    const { image } = props;\n\n    return (\n        <View style={Styles.container}>\n            <View style={{ height: 400, padding: 15 }}>\n                <Image\n                    source={{ uri: image.image }}\n                    resizeMode={'stretch'}\n                    style={{ flex: 1 }}\n                />\n            </View>\n            <View style={Styles.containerImageBottom}>\n                <View style={{ flexDirection: 'row', marginBottom: 5 }}>\n                    <View style={{ width: 60, padding: 5 }}>\n                        <ImageCircleView\n                            size={60}\n                            url={'https://i.imgur.com/mCHMpLT.png?3'}\n                        />\n                    </View>\n                    <View style={{ flex: 1, height: '100%', padding: 5, }}>\n                    </View>\n                </View>\n                <Text numberOfLines={2} style={{ color: 'grey', fontWeight: 'bold' }}>\n                    {image.username}\n                    <Text style={{ fontWeight: '200' }}>\n                        {' \\n'}\n                        {image.description ? image.description : \"No description\"}\n                    </Text>\n                </Text>\n            </View>\n        </View>\n    );\n};\nexport default ImageView;","import { API_URL, API_CLIENT_ID } from \"@env\";\nimport * as SecureStore from \"expo-secure-store\";\nimport React, { useState, useEffect } from 'react';\n\nconst sortSubmissionsEnum = { new: \"newest\", old: \"oldest\", worst: \"worst\", best: \"best\" };\n\nexport const getSubmissions = async (page = \"0\", sort = \"newest\") => {\n    let user = await SecureStore.getItemAsync(\"user_name\");\n    try {\n        let response = await fetch(API_URL + \"3/account/\" +\n            user + \"/submissions/\" +\n            page + \"/\" + sort, {\n            method: 'GET',\n            headers: {\n                Authorization: `Client-ID ${API_CLIENT_ID}`,\n            },\n            mode: '',\n        });\n        let json = await response.json();\n        return json;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n/* GET request gallery */\n/**\n * Request imgur gallery\n * @param {string} section - Section requested: top, hot or user params\n * @param {string} sort  - Sorting filters\n * @param {string} window - Request daily,weekly or monthly gallery\n * @param {number} page - Page number requested\n * @param {boolean} showViral - Request viral content\n * @param {boolean} showMature - Request mature content\n */\nexport const getGallery = async (\n    section = \"hot\",\n    sort = \"viral\",\n    window = \"day\",\n    page = \"0\",\n    showViral = \"true\",\n    showMature = \"true\",\n    albumPreview = \"true\") => {\n    var _header = new Headers();\n    _header.append(\"Authorization\", `Client-ID ${API_CLIENT_ID}`)\n\n    try {\n        let response = await fetch(`${API_URL}3/gallery/${section}/${sort}/${window}/${page}?showViral=${showViral}&showMature=${showMature}&album_preview=${albumPreview}`, {\n            method: 'GET',\n            headers: _header,\n            mode: '',\n        });\n        let json = await response.json();\n        return json;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n/* GET request gallery */\n/**\n * Request imgur gallery search\n * @param {string} sort  - Sorting filters\n * @param {string} window - Request daily,weekly or monthly gallery\n * @param {number} page - Page number requested\n * @param {string} str - Research string\n */\n\nexport const getGallerySearchResult = async (\n    sort,\n    window,\n    page,\n    str) => {\n    try {\n        let response = await fetch(API_URL + \"3/gallery/search/\" +\n            sort + \"/\" + window + \"/\" +\n            page + \"?q=\" + str, {\n            method: 'GET',\n            headers: {\n                Authorization: `Client-ID ${API_CLIENT_ID}`,\n            },\n            mode: '',\n        });\n        let json = await response.json();\n        return json;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n\nconst upload = async (image) => {\n    try {\n        let response = await fetch(API_URL + \"3/upload\", {\n            method: 'POST',\n            headers: {\n                Authorization: `Client-ID ${API_CLIENT_ID}`,\n            },\n            mode: '',\n        });\n        let json = await response.json();\n        return json;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nconst addFavorite = () => {\n\n}\n\nconst removeFavorite = () => {\n\n}","import React, { Component } from \"react\";\nimport { Text, SafeAreaView, FlatList } from \"react-native\";\nimport { TextInput, TouchableHighlight } from \"react-native-gesture-handler\";\nimport Styles from \"../styles/Styles\";\nimport ImageView from \"../views/ImageView\";\nimport { getGallery, getGallerySearchResult, getSubmissions } from \"../services/ImgurApi\";\n\nexport default class HomeScreen extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgallery: [],\n\t\t\tsearch: \" \",\n\t\t\tsort: \"viral\",\n\t\t\tname: \"\",\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tthis.getGalleryItems();\n\t}\n\n\tgetGalleryItems = () => {\n\t\tgetGallery().then(response => {\n\t\t\tlet array = response.data.map(elem => {\n\t\t\t\tif (elem.images && (\n\t\t\t\t\telem.images[0].type === \"image/jpeg\" ||\n\t\t\t\t\telem.images[0].type === \"image/png\")) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: elem.id,\n\t\t\t\t\t\timage: elem.images[0].link,\n\t\t\t\t\t\tfavorite: elem.favorite,\n\t\t\t\t\t\tups: elem.ups,\n\t\t\t\t\t\tdowns: elem.downs,\n\t\t\t\t\t\ttitle: elem.title,\n\t\t\t\t\t\tvote: elem.vote,\n\t\t\t\t\t\tusername: elem.account_url,\n\t\t\t\t\t\tdescription: elem.images[0].description\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet arrayFiltered = array.filter(function (isUndef) {\n\t\t\t\treturn isUndef !== undefined;\n\t\t\t});\n\t\t\tthis.setState({ gallery: arrayFiltered });\n\t\t}).catch(error => {\n\t\t\tconsole.debug(error);\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<SafeAreaView style={Styles.container}>\n\t\t\t\t{/* <Text>{this.state.name}</Text> */}\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={this.state.gallery}\n\t\t\t\t\tkeyExtractor={item => item.id.toString()}\n\t\t\t\t\trenderItem={({ item }) => <ImageView image={item} />}\n\t\t\t\t/>\n\t\t\t</SafeAreaView>\n\t\t);\n\t}\n}\n","import React, {useState} from \"react\";\nimport { Text, SafeAreaView, FlatList } from \"react-native\";\nimport { SearchBar } from 'react-native-elements';\nimport Styles from \"../styles/Styles\";\nimport ImageView from \"../views/ImageView\";\nimport {getGallerySearchResult } from \"../services/ImgurApi\";\n\nexport default function SearchScreen() {\n\n\tconst [input, setInput] = useState(\"\");\n\tconst [gallery, setGallery] = useState([]);\n\tconst [time, setTime] = useState(\"all\");\n\tconst [sort, setSort] = useState(\"time\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [name, setName] = useState(\"\");\n\n\n\n\tfunction searchGallery(input) {\n\t\tgetGalleryItems(input);\n\t}\n\n\tasync function getGalleryItems(input) {\n\t\tgetGallerySearchResult(sort, time, 0, input).then(response => {\n\t\t\tlet array = response.data.map(elem => {\n\t\t\t\tif (elem.images && (\n\t\t\t\t\telem.images[0].type === \"image/jpeg\" ||\n\t\t\t\t\telem.images[0].type === \"image/png\")) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: elem.id,\n\t\t\t\t\t\timage: elem.images[0].link,\n\t\t\t\t\t\tfavorite: elem.favorite,\n\t\t\t\t\t\tups: elem.ups,\n\t\t\t\t\t\tdowns: elem.downs,\n\t\t\t\t\t\ttitle: elem.title,\n\t\t\t\t\t\tvote: elem.vote,\n\t\t\t\t\t\tusername: elem.account_url,\n\t\t\t\t\t\tdescription: elem.images[0].description\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet arrayFiltered = array.filter(function (isUndef) {\n\t\t\t\treturn isUndef !== undefined;\n\t\t\t});\n\t\t\tsetGallery(arrayFiltered);\n\t\t}).catch(error => {\n\t\t\tconsole.debug(error);\n\t\t});\n\t}\n\treturn (\n\t\t<SafeAreaView style={Styles.container}>\n\t\t\t<SearchBar\n\t\t\t\tplaceholder=\"Search Here...\"\n\t\t\t\tvalue={input}\n\t\t\t\tonChangeText={(input) => setInput(input)}\n\t\t\t\tonSubmitEditing={() => searchGallery(input)}\n\t\t\t\tautoCorrect={false}\n\t\t\t/>\n\t\t\t<Text>{name}</Text>\n\t\t\t<FlatList\n\t\t\t\tmaxToRenderPerBatch={50}\n\t\t\t\tdata={gallery}\n\t\t\t\tkeyExtractor={item => item.id.toString()}\n\t\t\t\trenderItem={({ item }) => <ImageView image={item} />}\n\t\t\t/>\n\t\t</SafeAreaView>\n\t);\n}\n","import \"react-native-gesture-handler\";\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ConnectScreen from \"./components/screens/ConnectScreen\";\nimport WebAuthScreen from \"./components/screens/WebAuthScreen\";\nimport HomeScreen from \"./components/screens/HomeScreen\";\nimport SearchScreen from \"./components/screens/SearchScreen\";\nimport { Ionicons } from '@expo/vector-icons';\n\nconst Stack = createBottomTabNavigator();\n\nexport default class App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<NavigationContainer>\n\t\t\t\t<Stack.Navigator\n\t\t\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\t\t\tlet iconName;\n\t\t\t\t\t\t\tif (route.name === 'Home') {\n\t\t\t\t\t\t\t\ticonName = focused\n\t\t\t\t\t\t\t\t\t? 'ios-home-sharp'\n\t\t\t\t\t\t\t\t\t: 'ios-home';\n\t\t\t\t\t\t\t} else if (route.name === 'Connect') {\n\t\t\t\t\t\t\t\ticonName = focused\n\t\t\t\t\t\t\t\t\t? 'ios-list-sharp'\n\t\t\t\t\t\t\t\t\t: 'ios-list';\n\t\t\t\t\t\t\t} else if (route.name === 'Search') {\n\t\t\t\t\t\t\t\ticonName = focused\n\t\t\t\t\t\t\t\t\t? 'ios-search-sharp'\n\t\t\t\t\t\t\t\t\t: 'ios-search';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t\ttabBarOptions={{\n\t\t\t\t\t\tactiveTintColor: 'seagreen',\n\t\t\t\t\t\tinactiveTintColor: 'gray',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"Connect\"\n\t\t\t\t\t\tcomponent={ConnectScreen}\n\t\t\t\t\t\toptions={{ title: \"Connect\" }} />\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"Home\"\n\t\t\t\t\t\tcomponent={HomeScreen}\n\t\t\t\t\t\toptionts={{ title: \"Home\" }} />\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"Search\"\n\t\t\t\t\t\tcomponent={SearchScreen}\n\t\t\t\t\t\toptions={{ title: \"Search\" }} />\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"WebAuth\"\n\t\t\t\t\t\tcomponent={WebAuthScreen}\n\t\t\t\t\t\toptions={{ title: \"\" }}\n\t\t\t\t\t\tlisteners={{ tabPress: e => { e.preventDefault(); } }}\n\t\t\t\t\t/>\n\t\t\t\t</Stack.Navigator>\n\t\t\t</NavigationContainer>\n\t\t);\n\t}\n}\n","import { registerRootComponent } from \"expo\";\n\nimport App from \"./src/app/App\";\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}